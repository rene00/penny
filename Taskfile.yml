---
version: '3'

env:
  CONFIG_FILE: ./conf.py
  FLASK_APP: penny

vars:
  DOCKER_TAG:
    sh: git log -n1 --format=%h
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: rene00/penny

tasks:
  db:migrate:
    cmds:
      - poetry run flask db migrate
  db:upgrade:
    envs:
      - PENNY_SKIP_IMPORT_ALL_TYPES: 1
    cmds:
      - poetry run flask db upgrade
  build:python3.9:
    desc: "if lsb codename is bookworm force poetry to use python3.9"
    vars:
      LSB_CODENAME:
        sh: lsb_release -cs 2>/dev/null || echo ""
    silent: true
    cmds: 
      - |
        if [ "{{.LSB_CODENAME}}" = "bookworm" ]; then
          if ! command -v python3.9 >/dev/null; then
            echo "missing python3.9"
            exit 1
          fi
          poetry env use python3.9 >/dev/null
        fi
  build:
    deps: [build:python3.9]
    cmds:
      - poetry install --no-dev
  build:dev:
    cmds:
      - poetry install
  run:queue:
    env:
      CONFIG_FILE: ./conf.py
    cmds:
      - poetry run rqworker --url redis://localhost:6379/0 --verbose --path=.
  run:www:
    env:
      FLASK_DEBUG: 1
      FLASK_APP: penny
      CONFIG_FILE: ./conf.py
      PENNY_IMPORT_ALL_TYPES: 1
    vars:
      FLASK_HOST: 127.0.0.1
      FLASK_PORT: 5000
    cmds:
      - mkdir -p files/transactions files/uploads
      - poetry run flask run --host={{ .FLASK_HOST }} --port={{ .FLASK_PORT }}
  docker:build:
    cmds:
      - docker buildx build . -t {{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE_NAME}}:{{.DOCKER_TAG}} {{.DOCKER_BUILD_ARGS}}
  docker:run:
    vars:
      HOST_PORT: 5000
    cmds:
      - |
        docker run -it --restart always \
          --publish {{ .HOST_PORT }}:5000 \
          -e CONFIG_FILE=/app/penny/conf.py \
          --mount source=penny,target=/penny \
          --name penny {{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE_NAME}}:{{.DOCKER_TAG}}
  test:
    deps: [build:dev]
    cmds:
      - |
        poetry run pycodestyle \
          --ignore=E121,E123,E126,E226,E24,E704,W503,E711,E712,E501 penny
      - poetry run pytest .
  seed:init:
    env:
      FLASK_DEBUG: 1
      FLASK_APP: penny
      CONFIG_FILE: ./conf.py
    cmds:
      - poetry run flask seed init
  task:tag_match:
    env:
      FLASK_DEBUG: 1
      FLASK_APP: penny
      CONFIG_FILE: ./conf.py
    cmds:
      - poetry run flask task tag_match
  report:account_monthly_breakdown:
    env:
      FLASK_DEBUG: 1
      FLASK_APP: penny
      CONFIG_FILE: ./conf.py
      USER_ID: 1
      ACCOUNT_ID: 95
    cmds:
      - poetry run flask report account_monthly_breakdown $USER_ID $ACCOUNT_ID
  report:tag_monthly_breakdown:
    env:
      FLASK_DEBUG: 1
      FLASK_APP: penny
      CONFIG_FILE: ./conf.py
      USER_ID: 1
      TAG_ID: 4
    cmds:
      - poetry run flask report tag_monthly_breakdown $USER_ID $TAG_ID
